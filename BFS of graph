T(c)=O(node+edges)
vector<int> bfsOfGraph(int V, vector<int> adj[]) {
       
       vector<int>ans;
       unordered_map<int,bool>visited;
       
        queue<int>q;
        q.push(0);
        visited[0]=1;
    while(!q.empty()){
        int frontnode=q.front();
        q.pop();

        ans.push_back(frontnode);

        // for connecting neighbours
           for(auto i:adj[frontnode]){
             if (!visited[i]) {
               q.push(i);
               visited[i] = 1;
             }
           }
    }    
    return ans;
    }
